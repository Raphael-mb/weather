{"map":"{\"version\":3,\"sources\":[\"C:/Users/Admin/Desktop/weather-app-master/src/components/Titles.js\",\"C:/Users/Admin/Desktop/weather-app-master/src/components/Form.js\",\"C:/Users/Admin/Desktop/weather-app-master/src/components/Weather.js\",\"C:/Users/Admin/Desktop/weather-app-master/src/App.js\",\"C:/Users/Admin/Desktop/weather-app-master/src/serviceWorker.js\",\"C:/Users/Admin/Desktop/weather-app-master/src/index.js\"],\"names\":[\"Titles\",\"react_default\",\"a\",\"createElement\",\"className\",\"Form\",\"props\",\"onSubmit\",\"getWeather\",\"type\",\"name\",\"placeholder\",\"Weather\",\"city\",\"country\",\"temperature\",\"humidity\",\"description\",\"error\",\"theKEY\",\"App\",\"state\",\"_callee\",\"e\",\"api_call\",\"data\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"preventDefault\",\"target\",\"elements\",\"value\",\"fetch\",\"concat\",\"sent\",\"json\",\"_this\",\"setState\",\"main\",\"temp\",\"sys\",\"weather\",\"stop\",\"id\",\"components_Titles\",\"components_Form\",\"this\",\"components_Weather\",\"React\",\"Component\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\",\"catch\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"response\",\"status\",\"headers\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\r\\n\\r\\nconst Titles = () => (\\r\\n\\t<div>\\r\\n\\t\\t<h1 className=\\\"weatherHeading\\\">Weather App</h1>\\r\\n\\t\\t<p className=\\\"weatherHeading\\\">Enter values to get weather for a particular city</p>\\r\\n\\t</div>\\r\\n);\\r\\n\\r\\nexport default Titles;\",\"import React from \\\"react\\\";\\r\\n\\r\\nconst Form = props => (\\r\\n\\t<form onSubmit={props.getWeather} className=\\\"weatherHeading\\\">\\r\\n\\t\\t<input type=\\\"text\\\" name=\\\"city\\\" placeholder=\\\"Enter City..\\\"/>\\r\\n\\t\\t<input type=\\\"text\\\" name=\\\"country\\\" placeholder=\\\"Enter Country...\\\"/>\\r\\n\\t\\t<button>Submit</button>\\r\\n\\t</form>\\r\\n);\\r\\n\\r\\nexport default Form;\",\"import React from \\\"react\\\";\\r\\n\\r\\nconst Weather = props => (\\r\\n\\t<div className=\\\"weatherHeading\\\">\\r\\n\\t {\\t\\r\\n\\t \\tprops.city && props.country && <p> Location: \\r\\n\\t \\t\\t<span> { props.city }, { props.country }</span>\\r\\n\\t \\t</p> \\r\\n\\t }\\r\\n\\t { \\t\\r\\n\\t \\tprops.temperature && <p> Temperature: \\r\\n\\t \\t\\t<span> { props.temperature }\\tC</span>\\r\\n\\t \\t</p> \\r\\n\\t }\\r\\n\\t { \\t\\r\\n\\t \\tprops.humidity && <p> Humidity: \\r\\n\\t \\t\\t<span> { props.humidity } </span>\\r\\n\\t \\t</p> \\r\\n\\t }\\r\\n\\t { \\t\\r\\n\\t \\tprops.description && <p> Conditions: \\r\\n\\t \\t\\t<span> { props.description } </span>\\r\\n\\t </p> \\r\\n\\t }\\r\\n\\t { \\r\\n\\t \\tprops.error && <p>{ props.error }</p>  \\r\\n\\t }\\r\\n\\t</div>\\r\\n);\\r\\n\\r\\nexport default Weather;\",\"import React from \\\"react\\\";\\n\\nimport Titles from \\\"./components/Titles\\\";\\nimport Form from \\\"./components/Form\\\";\\nimport Weather from \\\"./components/Weather\\\";\\nimport \\\"./style.css\\\";\\n\\n//Unique API Key\\nconst theKEY = \\\"2e8da17003bdff69a7e3e0845bdc6b53\\\";\\n\\nclass App extends React.Component {\\n  state = {\\n    temperature: \\\"\\\",\\n    city: \\\"\\\",\\n    country: \\\"\\\",\\n    humidity: \\\"\\\",\\n    description: \\\"\\\",\\n    error: \\\"\\\"\\n  }\\n  getWeather = async (e) => {\\n    \\n    e.preventDefault();\\n    const city = e.target.elements.city.value;\\n    const country = e.target.elements.country.value;\\n    //Api call below, we put in the city and country and provide the hard coded unique API key\\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${theKEY}&units=metric`);\\n    //JSON file returned and read\\n    const data = await api_call.json();\\n    if (city && country) {\\n      this.setState({\\n        temperature: data.main.temp, \\n        city: data.name,\\n        country: data.sys.country,\\n        humidity: data.main.humidity,\\n        description: data.weather[0].description, \\n        error: \\\"\\\"\\n      });\\n    } else {\\n      this.setState({\\n        temperature: \\\"\\\",\\n        city: \\\"\\\",\\n        country: \\\"\\\",\\n        humidity: \\\"\\\",\\n        description: \\\"\\\",\\n        error: \\\"Please enter both the city and country into the inputs.\\\"\\n      });\\n    }\\n  }\\n  render() {\\n    return (\\n      <div id=\\\"dis\\\"> \\n        <div>\\n          <Titles />\\n        </div>\\n        <div>\\n          <Form getWeather={this.getWeather} />\\n          <Weather \\n            temperature={this.state.temperature} \\n            humidity={this.state.humidity}\\n            city={this.state.city}\\n            country={this.state.country}\\n            description={this.state.description}\\n            error={this.state.error}\\n          />\\n        </div>      \\n      </div>\\n    );\\n  }\\n};\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\nimport \\\"./App.css\\\";\\nimport App from './App';\\nimport serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\nserviceWorker();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(19)},16:function(e,t,n){},18:function(e,t,n){},19:function(e,t,n){\"use strict\";n.r(t);var r=n(0),a=n.n(r),i=n(3),o=n.n(i),c=(n(15),n(16),n(1)),l=n.n(c),s=n(4),u=n(5),m=n(6),d=n(8),p=n(7),h=n(9),f=function(){return a.a.createElement(\"div\",null,a.a.createElement(\"h1\",{className:\"weatherHeading\"},\"Weather App\"),a.a.createElement(\"p\",{className:\"weatherHeading\"},\"Enter values to get weather for a particular city\"))},y=function(e){return a.a.createElement(\"form\",{onSubmit:e.getWeather,className:\"weatherHeading\"},a.a.createElement(\"input\",{type:\"text\",name:\"city\",placeholder:\"Enter City..\"}),a.a.createElement(\"input\",{type:\"text\",name:\"country\",placeholder:\"Enter Country...\"}),a.a.createElement(\"button\",null,\"Submit\"))},w=function(e){return a.a.createElement(\"div\",{className:\"weatherHeading\"},e.city&&e.country&&a.a.createElement(\"p\",null,\" Location:\",a.a.createElement(\"span\",null,\" \",e.city,\", \",e.country)),e.temperature&&a.a.createElement(\"p\",null,\" Temperature:\",a.a.createElement(\"span\",null,\" \",e.temperature,\" C\")),e.humidity&&a.a.createElement(\"p\",null,\" Humidity:\",a.a.createElement(\"span\",null,\" \",e.humidity,\" \")),e.description&&a.a.createElement(\"p\",null,\" Conditions:\",a.a.createElement(\"span\",null,\" \",e.description,\" \")),e.error&&a.a.createElement(\"p\",null,e.error))},g=(n(18),\"2e8da17003bdff69a7e3e0845bdc6b53\"),v=function(e){function t(){var e,n;Object(u.a)(this,t);for(var r=arguments.length,a=new Array(r),i=0;i<r;i++)a[i]=arguments[i];return(n=Object(d.a)(this,(e=Object(p.a)(t)).call.apply(e,[this].concat(a)))).state={temperature:\"\",city:\"\",country:\"\",humidity:\"\",description:\"\",error:\"\"},n.getWeather=function(){var e=Object(s.a)(l.a.mark(function e(t){var r,a,i,o;return l.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),r=t.target.elements.city.value,a=t.target.elements.country.value,e.next=5,fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(r,\",\").concat(a,\"&appid=\").concat(g,\"&units=metric\"));case 5:return i=e.sent,e.next=8,i.json();case 8:o=e.sent,r&&a?n.setState({temperature:o.main.temp,city:o.name,country:o.sys.country,humidity:o.main.humidity,description:o.weather[0].description,error:\"\"}):n.setState({temperature:\"\",city:\"\",country:\"\",humidity:\"\",description:\"\",error:\"Please enter both the city and country into the inputs.\"});case 10:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),n}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",{id:\"dis\"},a.a.createElement(\"div\",null,a.a.createElement(f,null)),a.a.createElement(\"div\",null,a.a.createElement(y,{getWeather:this.getWeather}),a.a.createElement(w,{temperature:this.state.temperature,humidity:this.state.humidity,city:this.state.city,country:this.state.country,description:this.state.description,error:this.state.error})))}}]),t}(a.a.Component),E=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function b(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}o.a.render(a.a.createElement(v,null),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"/weather\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"/weather\",\"/service-worker.js\");E?(function(e){fetch(e).then(function(t){404===t.status||-1===t.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):b(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ\")})):b(e)})}}()}},[[10,1,2]]]);","extractedComments":[]}